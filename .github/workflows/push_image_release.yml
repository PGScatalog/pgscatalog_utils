name: push tagged images on release

on:
  release:
    types: [published]

env:
  REGISTRY_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  REGISTRY_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  DOCKER_REGISTRY_LOGIN: "dockerhub.ebi.ac.uk"
  SINGULARITY_REGISTRY_LOGIN: "oras://dockerhub.ebi.ac.uk"
  DOCKER_REGISTRY: "dockerhub.ebi.ac.uk/gdp-public/pgsc_calc"
  SINGULARITY_REGISTRY: "oras://dockerhub.ebi.ac.uk/gdp-public/pgsc_calc/singularity"
    
jobs:
  build_docker_release:
    name: build docker release image
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'pgscatalog/pgscatalog_utils' }}
          
    steps:
      - name: Check out pipeline code
        uses: actions/checkout@v3
          
      - name: Build new docker image
        run: docker build --no-cache . -t "${DOCKER_REGISTRY}/pgscatalog_utils:latest"

      - name: Push Docker image 
        run: |
          echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker tag "${DOCKER_REGISTRY}/pgscatalog_utils:latest" "${DOCKER_REGISTRY}/pgscatalog_utils:amd64-${{ github.event.release.tag_name }}"
          docker push "${DOCKER_REGISTRY}/pgscatalog_utils:amd64-${{ github.event.release.tag_name }}"

  build_singularity_dev:
    needs: build_docker_dev
    name: build singularity release image
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'pgscatalog/pgscatalog_utils' }}

    steps:
      - name: Check out pipeline code
        uses: actions/checkout@v3
        
      - name: Cache singularity setup
        id: cache-singularity
        uses: actions/cache@v3
        with:
          path: /opt/hostedtoolcache/singularity/
          key: ${{ runner.os }}-singularity
        
      - name: Set up Singularity
        uses: eWaterCycle/setup-singularity@v7
        if: steps.cache-singularity.outputs.cache-hit != 'true'        
        with:
          singularity-version: 3.8.3        

      - name: Build singularity image
        run: singularity build img.sif "docker://${DOCKER_REGISTRY}/pgscatalog_utils:amd64-${{ github.event.release.tag_name }}"

      - name: Push singularity image
        run: |
          echo "$REGISTRY_TOKEN" | singularity remote login -u "$REGISTRY_USERNAME" --password-stdin "$SINGULARITY_REGISTRY_LOGIN"
          singularity push img.sif "${SINGULARITY_REGISTRY}/pgscatalog_utils:amd64-${{ github.event.release.tag_name }}"
          
